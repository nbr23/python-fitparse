name: Main CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.x']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=.venv

    - name: Run tests
      run: |
        uv run python -m unittest discover -s tests
        uv run coverage run run_tests.py && uv run coverage report -m

  tag-version:
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    uses: nbr23/github-workflows/.github/workflows/tag-pyproject-version-bump.yml@main

  publish:
    needs: [test, tag-version]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || needs.tag-version.outputs.tag_created == 'true'
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Build package
      run: uv build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1